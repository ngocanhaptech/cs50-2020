{
	"info": {
		"_postman_id": "3b84bbf7-8d4b-4576-87e4-16f67bfb8b6a",
		"name": "SECTION6",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "/items",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "52162b47-afe9-46ea-9d00-b6f71d1ff53d",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/items",
					"host": [
						"{{url}}"
					],
					"path": [
						"items"
					]
				},
				"description": "This should return a list of items, each in JSON format."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"value": "JWT {{jwt_token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{url}}/item/phone",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"phone"
					]
				},
				"description": "This will return one specific item, uniquely indentifified by its name. No two items may have the same name."
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"url": {
					"raw": "{{url}}/store/test",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test"
					]
				},
				"description": "This will return one specific store, uniquely indentifified by its name. No two stores may have the same name."
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"url": {
					"raw": "{{url}}/store/test2",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test2"
					]
				},
				"description": "This will create a store."
			},
			"response": []
		},
		{
			"name": "/store/<name>",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"url": {
					"raw": "{{url}}/store/test",
					"host": [
						"{{url}}"
					],
					"path": [
						"store",
						"test"
					]
				},
				"description": "This will delete a store."
			},
			"response": []
		},
		{
			"name": "/stores",
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Authorization",
						"type": "text",
						"value": "JWT {{jwt_token}}"
					}
				],
				"url": {
					"raw": "{{url}}/stores",
					"host": [
						"{{url}}"
					],
					"path": [
						"stores"
					]
				},
				"description": "This will return a list of all the stores in the system."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "a7930098-a551-4f3a-ad1f-8732d1e9b5d7",
						"exec": [
							"pm.test(\"Response time is less than 200ms\", function () {\r",
							"    pm.expect(pm.response.responseTime).to.be.below(200);\r",
							"});\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(201);\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"price\": 15.99,\r\n    \"store_id\": 1\r\n}"
				},
				"url": {
					"raw": "{{url}}/item/test",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"test"
					]
				},
				"description": "This will create a new item. If the item already exists, it will fail."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"price\": 27.99,\r\n    \"store_id\": 2\r\n}"
				},
				"url": {
					"raw": "{{url}}/item/pia",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"pia"
					]
				},
				"description": "This will create a new item, or update an exists item."
			},
			"response": []
		},
		{
			"name": "/item/<name>",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json",
						"disabled": true
					}
				],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "{{url}}/item/test",
					"host": [
						"{{url}}"
					],
					"path": [
						"item",
						"test"
					]
				},
				"description": "This will delete an item, uniquely indentifified by its name."
			},
			"response": []
		},
		{
			"name": "/auth",
			"event": [
				{
					"listen": "test",
					"script": {
						"id": "fdb4144e-d1b8-447c-85ed-e81a31f637b5",
						"exec": [
							"var jsonData = pm.response.json();\r",
							"tests[\"Access token was not empty\"] = jsonData.access_token !== undefined;\r",
							"pm.environment.set(\"jwt_token\", jsonData.access_token);\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"jose\",\r\n    \"password\": \"asdf\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/auth",
					"host": [
						"{{url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "/register",
			"protocolProfileBehavior": {
				"disabledSystemHeaders": {
					"content-type": true
				}
			},
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"type": "text",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"username\": \"jose\",\r\n    \"password\": \"asdf\"\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{url}}/register",
					"host": [
						"{{url}}"
					],
					"path": [
						"register"
					]
				}
			},
			"response": []
		}
	],
	"protocolProfileBehavior": {}
}